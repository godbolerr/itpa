template header
id
assessmentYear
ruleTemplate
status
name
sectionType
schemeCode
pcDeduction
maxOfGTIPct


package com.work.itpa.rules;

import java.util.List;
import java.math.BigDecimal;
import com.work.itpa.domain.FinPerson;
import com.work.itpa.domain.Deduction;
import com.work.itpa.domain.FinPersonResult;
import com.work.itpa.domain.Donation;

template "AT G  1 Rules"


rule "AT1GG@{row.rowNumber}"
    when
		$fp : FinPerson() 	 &&
        $pfDonation :  Donation   (	schemeCode == "@{schemeCode}" ,
         amount.doubleValue() * @{pcDeduction} / 100  <=   $fp.grossTotalIncome.doubleValue() * @{maxOfGTIPct} / 100  ) from $fp.donations
        
    then
        BigDecimal deduction = new BigDecimal(@{pcDeduction});
        BigDecimal percent = new BigDecimal(100);
    	Deduction $deduction = new Deduction( 	$pfDonation.amount.multiply(deduction).divide(percent)  ,
    											$pfDonation.amount.multiply(deduction).divide(percent)  ,
    											$pfDonation.amount.multiply(deduction).divide(percent)  ,
    											"NA",
    											"@{sectionType}",
    											$pfDonation.details );
    	insert($deduction);
end


rule "AT1GG_1_@{row.rowNumber}"
    when
		$fp : FinPerson() 	 &&
        $pfDonation :  Donation   (	schemeCode == "@{schemeCode}" ,
         amount.doubleValue() * @{pcDeduction} / 100  >   $fp.grossTotalIncome.doubleValue() * @{maxOfGTIPct} / 100  ) from $fp.donations
        
    then
        BigDecimal deduction = new BigDecimal(@{maxOfGTIPct});
        BigDecimal percent = new BigDecimal(100);
    	Deduction $deduction = new Deduction( 	$fp.grossTotalIncome.multiply(deduction).divide(percent)  ,
    											$fp.grossTotalIncome.multiply(deduction).divide(percent)   ,
    											$fp.grossTotalIncome.multiply(deduction).divide(percent)   ,
    											"NA",
    											"@{sectionType}",
    											$pfDonation.details );
    	insert($deduction);
end
end template






