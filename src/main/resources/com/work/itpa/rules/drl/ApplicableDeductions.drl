package com.work.itpa.rules;

import java.util.List;
import com.work.itpa.domain.FiConstants;

import function com.work.itpa.utils.FiUtil.isAvailable;
import com.work.itpa.domain.FinPerson;
import com.work.itpa.domain.Deduction;
import com.work.itpa.domain.FinPersonResult;
import com.work.itpa.domain.Donation;
import com.work.itpa.domain.SummaryDeduction;


// QQB and RRB combined to be 3 lacs or less
// 80U independent
// 80DDB , RELATION IS ONLY FOR INFORMATION , Put it in notes. Amount recovered should be deducted from the money spent.
// 80D 2 - To be taken from expense array. 
// 80D 1 - Taken Insurance where type = HEALTH , if policyFor =  family then look at SELF age, use premium for deduction
// 80D 1 - policyFor = parents, type = HEALTH , parentsMoreThanSixty , MIN_AGE MAX_AGE will come from json
// Aggregation for 80D - Health + Health expense is max [ Insurance should include health expenses if applicable ]
// Aggregation of FAMILY and PARENT will be combined to form maxDeduction
// 80DD - Relationship code is relationDepended in the json
// 80E for aggregation no max limit single value field.
// TTA - Take from Income, type = interest max deduction 10000, independent.
// 80 Aggregation




global java.util.List messages

rule "Get List of all deductions which can be availed"   
    when
        $deduction : Deduction ()
        $result : FinPersonResult( )
    then
    	$result.addDeduction($deduction);
end


/**
rule "Initiate SummaryDeduction objects"
	when
		not (SummaryDeduction())
	then
		System.out.println("Summary Objects initiated for GGA and GGC");
end
**/


rule "Summarize GGA Specific donation"   
    when
        $deduction : Deduction ( sectionType == "80GGA")
        $summary : SummaryDeduction( sectionType == "80GGA")
    then
    	$summary.addDeduction($deduction);
end


rule "Summarize GGC Specific donation"   
    when
        $deduction : Deduction ( sectionType == "80GGC")
        $summary : SummaryDeduction( sectionType == "80GGC")
    then
    	$summary.addDeduction($deduction);
end



rule "Summarize 80G Specific donation"   
    when
        $deduction : Deduction ( sectionType == "80G")
        $summary : SummaryDeduction( sectionType == "80G")
    then
    	$summary.addDeduction($deduction);
end

// QQB and RRB are combined into one.

rule "Summarize 80QQB Specific donations"   
    when
        $deduction : Deduction ( sectionType == "80QQB" )
        $summary : SummaryDeduction( sectionType == "80QQB_80RRB")
    then
    	$summary.addDeduction($deduction);
end

// QQB and RRB are combined into one.

rule "Summarize 80RRB Specific donations"   
    when
        $deduction : Deduction (  sectionType == "80RRB")
        $summary : SummaryDeduction( sectionType == "80QQB_80RRB")
    then
    	$summary.addDeduction($deduction);
end



rule "Summarize TTA Specific donation"   
    when
        $deduction : Deduction ( sectionType == "80TTA")
        $summary : SummaryDeduction( sectionType == "80TTA")
    then
    	$summary.addDeduction($deduction);
end






